import '/socket'
import '/select/select'
import '/pickle/dumps'
import '/pickle/Unpickler'


Server = addr commands ->
  server = socket.socket socket.AF_INET socket.SOCK_STREAM
  server.bind addr
  server.listen 10
  read = dict' (server, None)

  while True => for s in select read list! list! !! 0 => if
    s is server =>
      sock = fst server.accept!
      read !! sock = Unpickler $ sock.makefile 'rb' buffering: 8192

    otherwise => except
      e =>
        name, args = (read !! s).load!
        s.sendall $ dumps $ (commands !! name) *: args
      e :: EOFError  => read !!~ s
      e :: Exception => s.sendall $ dumps e


Client = subclass object where
  __init__  = @addr ~>
  reconnect = ~>
    @socket = socket.socket socket.AF_INET socket.SOCK_STREAM
    @socket.connect @addr
    @loader = Unpickler $ @socket.makefile 'rb' buffering: 8192

  __getattr__ = name ~> *: args ->
    @socket.sendall $ dumps (name, args)
    response = @loader.load!
    response :: Exception => raise response
    response
