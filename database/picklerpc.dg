import '/socket'
import '/bluelet'
import '/pickle/loads'
import '/pickle/dumps'
import '/select/select'

can_read = sock -> bool $ fst $ select (list' sock) list! list! 0


Server = (host, port) commands -> bluelet.server host port $ conn ->
  while True =>
    buffer = yield $ conn.recv 8192
    while can_read conn.sock => buffer += yield $ conn.recv 8192

    response = except
      e =>
        name, args = loads buffer
        (commands !! name) *: args
      e => e
    yield $ conn.sendall $ dumps response


Client = subclass object where
  __init__  = @addr ~>
  reconnect = ~>
    @socket = socket.socket socket.AF_INET socket.SOCK_STREAM
    @socket.connect @addr

  __getattr__ = name ~> *: args ->
    @socket.sendall $ dumps (name, args)
    buffer = @socket.recv 8192
    while can_read @socket => buffer += @socket.recv 8192

    response = loads buffer
    response :: Exception => raise response
    response
