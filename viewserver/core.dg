import '/flask/Blueprint'
import '/flask/redirect'
import '/flask/request'
import '/flask/render_template'
import '/flask/url_for'

import 'data'
import 'config'
import 'tools/as_list'
import 'tools/make_post'
import 'tools/get_or_404'
import 'tools/with_json_equivalent'


CONFIG = dict $ map (k -> (k, getattr config k)) $ set'
  'SITE_NAME'
  'SITE_TITLE'
  'POSTS_UNTIL_AUTOSAGE'
  'POSTS_PER_THREAD'
  'MAX_TITLE_LENGTH'
  'MAX_TEXT_LENGTH'
  'MAX_TEXT_LINES'
  'MAX_UPLOADS'
  'NOT_EMPTY'
  'IMAGES_ALWAYS_BUMP'


root = with_json_equivalent
  -> dict config: CONFIG boards: data.boards!
  -> render_template 'root.haml.html' boards: data.boards!


board = with_json_equivalent
  board page: 0 -> dict $ zip ('title', 'threads', 'pages') $ get_or_404 data.board board page
  board page: 0 ->
    data.get_cached_board board page or
      result = render_template 'board.haml.html'
        this:   (get_or_404 data.board board page)
        page:    page
        board:   board
      data.set_cached_board board page result
      result


thread = with_json_equivalent
  board thread -> get_or_404 data.thread board thread
  board thread ->
    view = request.cookies.get 'view_type'
    redirect $ url_for board: board thread: thread $ if
      view == 'tree' => '.thread_tree'
      otherwise      => '.thread_list'


thread_render = t template -> board thread ->
  data.get_cached_thread board thread t or
    result = render_template template
      this:   (get_or_404 data.thread board thread)
      board:   board
      as_list: as_list
    data.set_cached_thread board thread t result
    result


post_create = board ->
  redirect $ url_for '.thread' board: board thread:
    make_post board
      int  $ request.form.get 'parent' 0
      bool $ request.form.get 'sage'   False
      request.form.get      'title' ''
      request.form.get      'text'  ''
      request.files.getlist 'file'


mod = Blueprint 'core' __name__
mod.add_url_rule '/'                           None root
mod.add_url_rule '/<board>/'                   None post_create methods: (list' 'POST')
mod.add_url_rule '/<board>/'                   None board
mod.add_url_rule '/<board>/page/<int:page>/'   None board
mod.add_url_rule '/<board>/<int:thread>/'      None thread
mod.add_url_rule '/<board>/<int:thread>/tree/' 'thread_tree' $ thread_render 0 'tree.haml.html'
mod.add_url_rule '/<board>/<int:thread>/list/' 'thread_list' $ thread_render 1 'list.haml.html'
mod.add_url_rule '/api/'                       'json' $ -> render_template 'api.haml.html'
