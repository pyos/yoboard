import '/os/path'
import '/uuid/uuid4'
import '/functools/update_wrapper'
import '/subprocess/Popen'

import '/flask/abort'
import '/flask/jsonify'
import '/flask/request'

import 'data'
import 'config'
import 'markup/parse'

import '../database/Record'


get_or_404 = f *: args -> except
  e => f *: args
  e :: OverflowError => abort 403 'This thread is closed.'
  e :: KeyError      => abort 404


jsprepare = x -> if
  x :: Record => dict (where for (k, v) in zip x.fields x => k !! 0 != '_' => yield (k, jsprepare v))
  x :: dict   => dict $ zip x.keys! $ map jsprepare x.values!
  x :: list   => list $ map jsprepare x
  otherwise   => x


randname = alphabet: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_.' ->
  c = uuid4!.int
  s = len alphabet
  while c =>
    yield $ alphabet !! (c % s)
    c //= s


with_json_equivalent = onjson onhtml ->
  update_wrapper wrapped: onjson $ **: args ->
    html = request.accept_mimetypes !! 'text/html'
    json = request.accept_mimetypes !! 'application/json'
    if html >= json => onhtml **: args
       otherwise    => jsonify $ jsprepare $ onjson **: args


make_post = board parent sage title text files ->
  files = list
    where for f in files => if
      f.filename == '' =>  # An empty form field.
      f.mimetype.startswith 'image/' =>
        name = ''.join randname! + path.splitext f.filename !! 1
        yield (f, (name, 'm.' + name))
      # TODO support other file types?
      otherwise => abort 400 'Unknown file type.'
  fnames = list $ map snd files

  config.NOT_EMPTY and not (text or files) => abort 400 'Either a message or a file is required.'
  config.MAX_UPLOADS      < len files      => abort 400 'Too many files.'
  config.MAX_TITLE_LENGTH < len title      => abort 400 'The title is too long.'
  config.MAX_TEXT_LENGTH  < len text       => abort 400 'The text is too long.'
  config.MAX_TEXT_LINES <= text.count '\n' => abort 400 'The text contains too many lines.'

  htext  = parse text
  thread = if
    parent == 0 => get_or_404 data.thread_create board        title      htext fnames request.remote_addr
    otherwise   => get_or_404 data.post_create   board parent title sage htext fnames request.remote_addr

  for (file, (fn, tn)) in files =>
    fp = path.join config.UPLOAD_DIR fn
    tp = path.join config.UPLOAD_DIR tn
    file.save fp
    Popen $ list' 'convert' fp '-resize' ('{0}x{0}>'.format config.THUMBNAIL_SIZE) tp

  thread
