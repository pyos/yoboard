import '/dogeweb'
import '/dogeweb/r'
import '/dogeweb/abort'

import 'tools'
import '../config'
import '../database/Client'


WebClient = subclass Client where
  call = name args ~>
    r = Client.call self name args
    r :: OverflowError => abort 403 'Closed or over capacity.'
    r :: KeyError      => abort 404 $ str r
    r

data = WebClient config.CLIENT_ADDRESS
app  = dogeweb.app
  import 'core/mod'
  e ~>
    # TODO logging
    response = if
      @isjson   => dogeweb.jsonify $ dict' error: e.name description: e.description
      otherwise => yield from $ dogeweb.response.responsify $ 
        tools.render_template self 'error.hamlike' err: e code: e.code
    response.code = e.code
    response.headers.replace e.headers
    response
