import '/flask/Flask'
import '/flask/render_template'

import '../config'
import '../database/picklerpc/Client'

data = Client config.CLIENT_ADDRESS
app  = Flask __name__ template_folder: config.TEMPLATE_DIR static_folder: config.STATIC_DIR
app.before_first_request $ -> data.reconnect
app.register_blueprint   $ import 'html/mod'
#app.register_blueprint  $ import 'json/mod'
#app.register_blueprint  $ import 'admin/mod'

import '/os/path'
import '/traceback/extract_tb'
import '/werkzeug/exceptions/HTTPException'


onerror = code -> err -> page, code where page = render_template 'error.html'
  err:        err
  hascode:   (err :: HTTPException)
  traceback: (map    ((fn, a, b, c) -> path.relpath fn config.ROOT_DIR, a, b, c)
              filter ((fn, _, _, _) -> fn.startswith config.ROOT_DIR) $ extract_tb err.__traceback__)
  config:     config
  boards:     dict!

app.register_error_handler 400 $ onerror 400
app.register_error_handler 403 $ onerror 403
app.register_error_handler 404 $ onerror 404
app.register_error_handler 500 $ onerror 500
