import '/dogeweb'
import '/dogeweb/r'
import '/dogeweb/jsonify'

import 'data'
import 'config'


reqdata = fn -> r.router $ **: k ~>
  @_uid = @cookies.get 'userid' None
  @_usr = @_uid and data.user @_uid
  if not @_usr => 403, 'null'
     otherwise => fn self **: k


reqhost = fn -> reqdata $ **: k ~> if
  @_usr is True => fn self **: k
  otherwise     => 403, ''


reqboard = fn -> reqdata $ board **: k ~> if
  @_usr is True  => fn self board: board **: k
  board in @_usr => fn self board: board **: k
  otherwise      => 403, ''


method_switch = put delete -> r.method
  'PUT',    **: k ~> (200, '' where put    self **: k)
  'DELETE', **: k ~> (200, '' where delete self **: k)


board = method_switch
  reqhost $ board ~> data.board_create board (@form !! 'title') (@form !! 'cat')
  reqhost $ board ~> data.board_remove board


tree_attach = method_switch
  reqboard $ board tree ~> data.thread_set_attached board tree True
  reqboard $ board tree ~> data.thread_set_attached board tree False


tree_close = method_switch
  reqboard $ board tree ~> data.thread_set_closed board tree True
  reqboard $ board tree ~> data.thread_set_closed board tree False


tree_remove = method_switch
  reqboard $ board tree ~>
  reqboard $ board tree ~> data.post_remove board tree


mod = r.file
  '/_ismod/', reqdata $ **: k ~> jsonify @_usr
  # TODO: /<board>/bans/ or something.
  '/<str:board>/', board
  '/<str:board>/<int:tree>/attach', tree_attach
  '/<str:board>/<int:tree>/close',  tree_close
  '/<str:board>/<int:tree>/',       tree_remove
